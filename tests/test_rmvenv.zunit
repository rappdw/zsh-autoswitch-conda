#!/usr/bin/env zunit

@setup {

    export DISABLE_AUTOSWITCH_VENV="1"
    load "../autoswitch_conda.plugin.zsh"
    unset AUTOSWITCH_DEFAULT_REQUIREMENTS
    TARGET="$(mktemp -d)"
    cd "$TARGET"
}

@teardown {
    rm -rf "$TARGET"
}


@test 'rmvenv - shows warning if no .venv present' {
    run rmvenv

    assert $state equals 0
    assert "$output" same_as "No .venv file in the current directory!"
}


@test 'rmvenv - removes .venv if present' {
    # lightweight creation of a conda env
    conda create --name 12345 --no-default-packages --yes -q >/dev/null 2>&1

    echo "12345" > .venv

    run rmvenv

    assert $state equals 0
    assert "$lines[2]" same_as "Remove all packages in environment $CONDA_PREFIX/envs/12345:"
    test ! -f .venv
    test ! -d "$CONDA_PREFIX/envs/12345"
}

@test 'rmvenv - removes .venv if present with function' {
    # lightweight creation of a conda env
    conda create --name 54321 --no-default-packages --yes -q >/dev/null 2>&1

    echo "54321" > .venv

    # Interfere with rm executable (in normal use alias or function would do the same).
    function rm(){ : }

    run rmvenv

    assert $state equals 0
    assert "$lines[2]" same_as "Remove all packages in environment $CONDA_PREFIX/envs/54321:"
    test ! -f .venv
    test ! -d "$CONDA_PREFIX/envs/54321"
}

@test 'rmvenv - removes .venv and deactivates if currently active' {
    test_venv="$(basename $PWD)"
    run mkvenv --yes --quiet --no-default-packages

    run rmvenv

    assert $state equals 0
    assert "$lines[2]" same_as "Remove all packages in environment $CONDA_PREFIX/envs/$test_venv:"
    test ! -f .venv
    test ! -d "$CONDA_PREFIX/envs/$test_venv"
}
