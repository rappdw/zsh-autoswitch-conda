#!/usr/bin/env zunit

@setup {
    unset AUTOSWITCH_MESSAGE_FORMAT
    conda activate foobar
    PYTHON_VERSION="$(python --version 2>&1)"
    conda deactivate
}

@test 'correct version exported' {
    unset AUTOSWITCH_DEFAULTENV
    load ../autoswitch_conda.plugin.zsh

    git_version="$(git tag --list | sort -V | tail -1)"
    git tag --list

    assert "$AUTOSWITCH_VERSION" is_not_empty
    assert "$AUTOSWITCH_VERSION" same_as "$git_version"
}


@test 'plugin - does nothing on load if no default set' {
    unset AUTOSWITCH_DEFAULTENV

    run load ../autoswitch_conda.plugin.zsh

    assert $status equals 0
    assert "$output" is_empty
}

@test 'plugin - runs default env on load' {
    AUTOSWITCH_DEFAULTENV="foobar"
    run load ../autoswitch_conda.plugin.zsh

    assert $status equals 0
    assert "$output" same_as "Switching conda env: \e[1m\e[35mfoobar\e[0m \e[32m[üêç$PYTHON_VERSION]\e[0m"
}

@test 'plugin - does nothing if switching to directory without .venv' {
    unset AUTOSWITCH_DEFAULTENV
    load ../autoswitch_conda.plugin.zsh

    TEMP_DIR="$(mktemp -d)"

    run cd "$TEMP_DIR"

    assert $status equals 0
    assert "$output" is_empty
}

@test 'plugin - switches env when .venv found' {
    unset AUTOSWITCH_DEFAULTENV
    load ../autoswitch_conda.plugin.zsh

    TEMP_DIR="$(mktemp -d)"
    echo "foobar" > "$TEMP_DIR/.venv"
    chmod 600 "$TEMP_DIR/.venv"

    run cd "$TEMP_DIR"

    assert $status equals 0
    assert "$output" same_as "Switching conda env: \e[1m\e[35mfoobar\e[0m \e[32m[üêç$PYTHON_VERSION]\e[0m"

    mkdir "$TEMP_DIR/foo"

    # switches even in project subdirectories
    run cd "$TEMP_DIR/foo"

    assert $status equals 0
    assert "$output" same_as "Switching conda env: \e[1m\e[35mfoobar\e[0m \e[32m[üêç$PYTHON_VERSION]\e[0m"
}
